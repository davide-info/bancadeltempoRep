/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dto.AttivitaDto;
import dto.UtenteDto;
import entita.Attivita;
import entita.Offerta;
import entita.Utente;
import gui.modelloGrafico.ModelloOffertaUtenteDto;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.util.Date;
import java.util.Optional;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import service.AttivitaService;
import service.OffertaService;
import service.UtenteService;

/**
 *
 * @author win
 */
public class InserisciOfferta extends javax.swing.JFrame {
    private OffertaService offertaService;
    private UtenteService utenteService;
    private AttivitaService attivitaSevice;

    /**
     * Creates new form InserisciOfferta
     */
    public InserisciOfferta() {
        offertaService=new OffertaService();
        utenteService=new UtenteService();
        attivitaSevice=new AttivitaService();
       // System.out.println("OFFERTE ATTIVITA " + offertaService.getOfferteFatteUtente());
        JOptionPane.showMessageDialog(rootPane, "OFFERTE ATTIVITA'" + offertaService.getOfferteFatteUtente());
        
        initComponents();
      
        initComboboxes();
        rimuoviRigheEColonne();  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selezionaData = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabella = new javax.swing.JTable();
        selezionaUtente = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("INSERISCI OFFERTA");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Inserisci la data di offerta");

        jLabel2.setText("inserisci l'attività he è stata offerta");

        jLabel3.setText("Inserisci i'indirizzo email dell'utente che ha offerto l'attività");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tabella.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabella);

        selezionaUtente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton2.setText("MOSTRA TABELLA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(selezionaData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(selezionaUtente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jButton1)
                        .addGap(35, 35, 35)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(selezionaUtente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2))
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selezionaData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Date dataOfferta = selezionaData.getDate();
        
        String messaggio = controllaParametro(dataOfferta);
        if(messaggio.equals("OK")) {
               String indirizzoEmail = (String) selezionaUtente.getSelectedItem();
        String nomeAttivita = (String) jComboBox3.getSelectedItem();
        Optional<Utente> utenteOpt = utenteService.trovaEmailUtente(indirizzoEmail);
        Optional<Attivita> attivitaOpt = attivitaSevice.trovaNomeAttivita(nomeAttivita);
        Offerta offerta = new Offerta();
           offerta.setDataOfferta(dataOfferta);
        if(utenteOpt.isPresent()) {
            offerta.setUtente(utenteOpt.get());
        }
        if(attivitaOpt.isPresent()) {
            offerta.setAttivita(attivitaOpt.get());
        }
        offertaService.aggiungiOfferta(offerta);
        JOptionPane.showMessageDialog(null, "Offerta inserita correttamente");
          System.out.println("OFFERTE UTENTI AGGIUNTE "+offertaService.getOfferteFatteUtente());
        
        }
        else {
            JOptionPane.showMessageDialog(null, "Errore " + messaggio);
            return;
        }
        
     
      
     
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ModelloOffertaUtenteDto modello = new ModelloOffertaUtenteDto();
        modello.setLista(offertaService.getOfferteFatteUtente());
        tabella.setModel(modello);
       tabella.getParent().addComponentListener(new ComponentAdapter() {
    @Override
    public void componentResized(final ComponentEvent e) {
         jScrollPane1.setAutoscrolls(true);
        if (tabella.getPreferredSize().width < tabella.getParent().getWidth()) {
            tabella.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        } else {
           tabella.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        }
       
       if(tabella.getPreferredSize().height<tabella.getParent().getHeight()) {
           System.out.println("ENRATO QUA");
         //   
        }
    }
});
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InserisciOfferta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InserisciOfferta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InserisciOfferta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InserisciOfferta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                InserisciOfferta io = new InserisciOfferta();
               io.setVisible(true);
               io.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser selezionaData;
    private javax.swing.JComboBox<String> selezionaUtente;
    private javax.swing.JTable tabella;
    // End of variables declaration//GEN-END:variables

    private void initComboboxes() {
       jComboBox3.removeAllItems();
       selezionaUtente.removeAllItems();
       for(AttivitaDto attivita: attivitaSevice.getAttivita()) {
           String nomeAttivita = attivita.getNomeAttivita();
          // System.out.println("nomeAttivita " + nomeAttivita);
           jComboBox3.addItem(nomeAttivita);
        
           
       }
       for(UtenteDto utenteDto: utenteService.getUtenti()) {
           String indirizzoEmail = utenteDto.getEmail();
          //  System.out.println("indirizzoEmail " + indirizzoEmail);
             selezionaUtente.addItem(indirizzoEmail);
       
       }
     
          
    }
      private String controllaParametro(Date data) {
           String messaggio="OK";
           if(data==null) {
            
               messaggio="Errore data nulla";
           }
           
           return messaggio;
       }

    private void rimuoviRigheEColonne() {
          DefaultTableModel model =(DefaultTableModel) tabella.getModel();
            for(int i = model.getRowCount()-1; i>=0; i--)
           model.removeRow(i);
       TableColumnModel tableModel = tabella.getColumnModel();
     for(int i = tableModel.getColumnCount()-1; i>=0; i--) {
         TableColumn tcol = tableModel.getColumn(i);
         tabella.removeColumn(tcol);
    }
    }
}
