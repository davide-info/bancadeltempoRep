/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import db.dao.DaoUtente;
import dto.UtenteDto;
import entita.Utente;
import gui.modelloGrafico.ModelloUtenteDto;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.print.PrinterException;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.GroupLayout;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ScrollPaneLayout;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import service.UtenteService;

/**
 *
 * @author win
 */
public class InserisciUtente extends javax.swing.JFrame {
private boolean DEBUG = true;
private UtenteService utenteService ;
 
    /**
     * Creates new form BancaDelTempoGUI
     */
    public InserisciUtente() {
        initComponents(); 
        utenteService=new UtenteService();  
        rimuoviRigheEColonneTabella();
     JOptionPane.showMessageDialog(rootPane, "ELENCO UTENTI "+ utenteService.getUtenti());
             
            
     }
  
     private void rimuoviRigheEColonneTabella() {
          DefaultTableModel model =(DefaultTableModel) tabella.getModel();
            for(int i = model.getRowCount()-1; i>=0; i--)
           model.removeRow(i);
       TableColumnModel tableModel = tabella.getColumnModel();
     for(int i = tableModel.getColumnCount()-1; i>=0; i--) {
         TableColumn tcol = tableModel.getColumn(i);
         tabella.removeColumn(tcol);
    }
 }
    
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        etichettaNome = new javax.swing.JLabel();
        testoNome = new javax.swing.JTextField();
        etichettaCognome = new javax.swing.JLabel();
        testoCognome = new javax.swing.JTextField();
        titolo = new javax.swing.JLabel();
        etichettaEmail = new javax.swing.JLabel();
        testoEmail = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        testoPassword = new javax.swing.JTextField();
        btnRegistra = new javax.swing.JButton();
        mostraTabBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabella = new javax.swing.JTable();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        etichettaNome.setText("Inserisci il nome");
        etichettaNome.setName("etichettaNome"); // NOI18N

        testoNome.setName("testoNome"); // NOI18N

        etichettaCognome.setText("Inserisci il cognome");
        etichettaCognome.setName("etichettaCognome"); // NOI18N

        testoCognome.setName("testoCognome"); // NOI18N

        titolo.setText("Registrazione banca del tempo");

        etichettaEmail.setText("Inserisci l'email");

        jLabel3.setText("inserisci la password");

        btnRegistra.setText("REGISTRA");
        btnRegistra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistraActionPerformed(evt);
            }
        });

        mostraTabBtn.setText("MOSTRA TABELLA");
        mostraTabBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostraTabBtnActionPerformed(evt);
            }
        });

        tabella.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabella);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(etichettaNome)
                        .addGap(18, 18, 18)
                        .addComponent(testoNome, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(etichettaCognome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(testoCognome, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 5, Short.MAX_VALUE))
                            .addComponent(etichettaEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(testoEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(testoPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titolo, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRegistra)
                            .addComponent(mostraTabBtn))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titolo)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etichettaNome)
                    .addComponent(testoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etichettaCognome)
                    .addComponent(testoCognome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etichettaEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(testoEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(testoPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRegistra)
                .addGap(18, 18, 18)
                .addComponent(mostraTabBtn)
                .addGap(64, 64, 64))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistraActionPerformed
      String nome = this.testoNome.getText().trim();
      String cognome = this.testoCognome.getText().trim();
      String email = this.testoEmail.getText().trim();
      String password = this.testoPassword.getText().trim();
      String risultato = controllaParametri(nome, cognome, email, password);
      if(risultato.equalsIgnoreCase("OK")) {
          Utente  utente = creaUtente(nome,cognome, email,password);
          utenteService.aggiungiUtente(utente);
         
      
          JOptionPane.showMessageDialog(getContentPane(), "Utente di nome " + nome + " e " + cognome + " è stato  inserito correttamente");
            
      }
      else{ 
          JOptionPane.showMessageDialog(getContentPane(), "Errore inserimento utente  a causa dell'errore : " + risultato);
        
      }
     cancellaTesti();  
    }//GEN-LAST:event_btnRegistraActionPerformed

    private void mostraTabBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostraTabBtnActionPerformed
    
       
      
 
     ModelloUtenteDto modello = new ModelloUtenteDto();
     modello.setLista(utenteService.getUtenti());
       
        tabella.setModel(modello);
     
     
        
 
    }//GEN-LAST:event_mostraTabBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InserisciUtente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InserisciUtente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InserisciUtente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InserisciUtente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
      java.awt.EventQueue.invokeLater(() -> {
        var gui = new InserisciUtente();
          
          gui.setVisible(true);
          
          gui.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        });
    
   // System.out.println("FINE");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistra;
    private javax.swing.JLabel etichettaCognome;
    private javax.swing.JLabel etichettaEmail;
    private javax.swing.JLabel etichettaNome;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton mostraTabBtn;
    private javax.swing.JTable tabella;
    private javax.swing.JTextField testoCognome;
    private javax.swing.JTextField testoEmail;
    private javax.swing.JTextField testoNome;
    private javax.swing.JTextField testoPassword;
    private javax.swing.JLabel titolo;
    // End of variables declaration//GEN-END:variables

    private String controllaParametri(String nome, String cognome, String email, String password) {
       
        var errore=new StringBuffer("");
     
    if(nome==null || nome.isEmpty()) errore.append("campo nome vuoto ");
    if(cognome==null || cognome.isEmpty()) errore.append("campo cognome vuoto ");
    if(email == null || email.isEmpty()) errore.append("campo email vuoto " );
    if(utenteService.esisteEmail(email)) errore.append("email duplicata ");
    if(utenteService.esistePassword(password)) errore.append("password duplicata");
      if(errore.length()==0) return "OK";
      return errore.toString();
      
    }

    private Utente creaUtente(String nome, String cognome, String email, String password) {
     Utente utente = new Utente();
     utente.setNome(nome);
     utente.setCognome(cognome);
     utente.setPassword(password);
     utente.setIndirizzoEmail(email);
     return utente;
    }

    private void cancellaTesti() {
             testoNome.setText("");
          testoCognome.setText("");
          testoPassword.setText("");
          testoEmail.setText("");
    }
    
    private Object [] rigaUtente(UtenteDto utente){
        return new Object[]{utente.getNome(),utente.getCognome(),utente.getEmail(),utente.getSaldoOre()};
    }

    private void costruisciTabella(DefaultTableModel model) {
     String [] colonne = new String[]{"nome","cognome","email","saldoOre"}; 
//To change body of generated methods, choose Tools | Templates.
List<UtenteDto> utentiDto = utenteService.getUtenti();
model.addColumn(colonne);
    for(UtenteDto utenteDto:utentiDto) {
            Object [] righe = rigaUtente(utenteDto);
            model.addRow(righe);
        }
   
    
    }
   
    
    private class ModelloTabella extends DefaultTableModel{
        String[][] titoli ;
        Object [][] dati;
        public ModelloTabella() {}
        public ModelloTabella(String[][] titoli, Object[][] dati) {
            this.dati = dati ;
            this.titoli = titoli;
        }
        @Override
        public boolean isCellEditable(int row, int col) {
            return true;
        }
        
    }
    private class MioModello extends AbstractTableModel {

        @Override
        public int getRowCount() {
            return 2;//To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public int getColumnCount() {
          return 2;//To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
          int z = columnIndex+1;
          int y = columnIndex+2;
          return z + "  " + y;
        }
    }

    }
