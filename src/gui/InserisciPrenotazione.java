/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dto.OffertaDto;
import dto.RichiestaDto;
import dto.UtenteDto;
import entita.Prenotazione;
import entita.Utente;
import gui.modelloGrafico.ModelloPrenotazioneDto;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.util.Date;
import java.util.List;
import java.util.Optional;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import service.OffertaService;
import service.PrenotazioneService;
import service.RichiestaService;
import service.UtenteService;

/**
 *
 * @author win
 */
public class InserisciPrenotazione extends javax.swing.JFrame {
    private UtenteService utenteService ;
    private PrenotazioneService prenotazioneService;
    private int nuovaOra,nuovoSecondo,nuovoMinuto;
    private RichiestaService richiestaService ;
    private OffertaService offertaService;

    /**
     * Creates new form inserisciPrenotazione
     */
    public InserisciPrenotazione() {
        initComponents();
        this.jComboBox1.removeAllItems();
        utenteService=new UtenteService();
        prenotazioneService=new PrenotazioneService();
        richiestaService=new RichiestaService();
        offertaService=new OffertaService();
        for(UtenteDto utente: utenteService.getUtenti()) {
            this.jComboBox1.addItem(utente.getEmail());
        }
      JOptionPane.showMessageDialog(rootPane,"ELENCO PRENOTAZIONI "+prenotazioneService.getPrenotazioni());
        JOptionPane.showMessageDialog(rootPane,"ELENCO PRENOTAZIONI UTENTI "+prenotazioneService.getPrenotazioniUtente());  
      rimuoviRigheEColonneTabella();
      
     
     // java.sql.Time.valueOf(time)
       // scegliTempo.setTime();
      
        
    }
     private void rimuoviRigheEColonneTabella() {
          DefaultTableModel model =(DefaultTableModel) tabella.getModel();
            for(int i = model.getRowCount()-1; i>=0; i--)
           model.removeRow(i);
       TableColumnModel tableModel = tabella.getColumnModel();
     for(int i = tableModel.getColumnCount()-1; i>=0; i--) {
         TableColumn tcol = tableModel.getColumn(i);
         tabella.removeColumn(tcol);
    }
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jComboBox1 = new javax.swing.JComboBox<>();
        prenotazioneBtn = new javax.swing.JButton();
        etichettaEmail = new javax.swing.JLabel();
        etichettaData = new javax.swing.JLabel();
        etichettaOra = new javax.swing.JLabel();
        incrementaBtn = new javax.swing.JButton();
        incrementaMinutiBtn = new javax.swing.JButton();
        incrementaSecondiBtn = new javax.swing.JButton();
        descrementaOreBtn = new javax.swing.JButton();
        decrementaMinutiBtn = new javax.swing.JButton();
        decrementaSecondiBtn = new javax.swing.JButton();
        scegliTempo = new lu.tudor.santec.jtimechooser.JTimeChooser();
        scegliData = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabella = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        prenotazioneBtn.setText("AGGIUNGI PRENOTAZIONE");
        prenotazioneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prenotazioneBtnActionPerformed(evt);
            }
        });

        etichettaEmail.setText("Inserisci l'email dell'utente");

        etichettaData.setText("inserisci la data di prenotazione");

        etichettaOra.setText("Inserisci l'ora della prenotazione");

        incrementaBtn.setText("INCREMENTA ORE");
        incrementaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incrementaBtnActionPerformed(evt);
            }
        });

        incrementaMinutiBtn.setText("INCREMENTA MINUTI");
        incrementaMinutiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incrementaMinutiBtnActionPerformed(evt);
            }
        });

        incrementaSecondiBtn.setText("INCREMENTA SECONDI");
        incrementaSecondiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incrementaSecondiBtnActionPerformed(evt);
            }
        });

        descrementaOreBtn.setText("DECREMENTA ORE");
        descrementaOreBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descrementaOreBtnActionPerformed(evt);
            }
        });

        decrementaMinutiBtn.setText("DECREMENTA MINUTI");
        decrementaMinutiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decrementaMinutiBtnActionPerformed(evt);
            }
        });

        decrementaSecondiBtn.setText("DECREMENTA SECONDI");
        decrementaSecondiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decrementaSecondiBtnActionPerformed(evt);
            }
        });

        tabella.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabella);

        jButton1.setText("MOSTRA TABELLA PRENOTAZIONI UTENTE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prenotazioneBtn)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(incrementaSecondiBtn)))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(incrementaBtn)
                                .addGap(18, 18, 18)
                                .addComponent(incrementaMinutiBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(descrementaOreBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(decrementaMinutiBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(decrementaSecondiBtn))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(etichettaEmail)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(etichettaOra)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(scegliTempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(etichettaData)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(scegliData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(etichettaEmail)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(etichettaData)
                            .addComponent(scegliData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(etichettaOra, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(scegliTempo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(63, 63, 63)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(prenotazioneBtn)
                                    .addComponent(incrementaBtn)
                                    .addComponent(incrementaMinutiBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(incrementaSecondiBtn)
                                    .addComponent(descrementaOreBtn)
                                    .addComponent(decrementaMinutiBtn)
                                    .addComponent(decrementaSecondiBtn)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(99, 99, 99)))))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void incrementaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incrementaBtnActionPerformed
        // TODO add your handling code here:
        
      this.nuovaOra= scegliTempo.getHours()+1;
      this.nuovoMinuto=scegliTempo.getMinutes();
      this.nuovoSecondo=scegliTempo.getSeconds();
    
    
       if(nuovaOra>=24) nuovaOra = 0;
       LocalTime tempo = LocalTime.of(nuovaOra, nuovoMinuto,nuovoSecondo);
       Date nuovoTempo = java.sql.Time.valueOf(tempo);
      
       scegliTempo.setTime(nuovoTempo);
       
    }//GEN-LAST:event_incrementaBtnActionPerformed

    private void incrementaMinutiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incrementaMinutiBtnActionPerformed
        // TODO add your handling code here:
          this.nuovaOra= scegliTempo.getHours();
      this.nuovoMinuto=scegliTempo.getMinutes()+1;
      this.nuovoSecondo=scegliTempo.getSeconds();
        if(nuovoMinuto>=60) nuovoMinuto = 0;
        LocalTime tempo = LocalTime.of(nuovaOra, nuovoMinuto,nuovoSecondo);
        Date nuovoTempo = java.sql.Time.valueOf(tempo);
        scegliTempo.setTime(nuovoTempo);
    }//GEN-LAST:event_incrementaMinutiBtnActionPerformed

    private void incrementaSecondiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incrementaSecondiBtnActionPerformed
        // TODO add your handling code here:
            this.nuovaOra= scegliTempo.getHours();
      this.nuovoMinuto=scegliTempo.getMinutes();
      this.nuovoSecondo=scegliTempo.getSeconds()+1;
       if(nuovoSecondo>=60)
           nuovoSecondo=0;
       LocalTime tempo = LocalTime.of(this.nuovaOra,this.nuovoMinuto,this.nuovoSecondo);
       Date nuovoTempo = java.sql.Time.valueOf(tempo);
       scegliTempo.setTime(nuovoTempo);
    }//GEN-LAST:event_incrementaSecondiBtnActionPerformed

    private void descrementaOreBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descrementaOreBtnActionPerformed
        // TODO add your handling code here:
        this.nuovaOra=scegliTempo.getHours()-1;
          this.nuovoMinuto=scegliTempo.getMinutes();
        this.nuovoSecondo=scegliTempo.getSeconds();
        if(nuovaOra<=0) nuovaOra = 1;
            LocalTime tempo = LocalTime.of(this.nuovaOra,this.nuovoMinuto,this.nuovoSecondo);
       Date nuovoTempo = java.sql.Time.valueOf(tempo);
       scegliTempo.setTime(nuovoTempo);
    }//GEN-LAST:event_descrementaOreBtnActionPerformed

    private void decrementaMinutiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decrementaMinutiBtnActionPerformed
        // TODO add your handling code here:
        this.nuovaOra=scegliTempo.getHours();
        this.nuovoMinuto=scegliTempo.getMinutes()-1;
        this.nuovoSecondo=scegliTempo.getSeconds();
        if(nuovoMinuto<0)
            nuovoMinuto=0;
                  LocalTime tempo = LocalTime.of(this.nuovaOra,this.nuovoMinuto,this.nuovoSecondo);
       Date nuovoTempo = java.sql.Time.valueOf(tempo);
       scegliTempo.setTime(nuovoTempo);
    }//GEN-LAST:event_decrementaMinutiBtnActionPerformed

    private void decrementaSecondiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decrementaSecondiBtnActionPerformed
        // TODO add your handling code here:
          this.nuovaOra=scegliTempo.getHours();
        this.nuovoMinuto=scegliTempo.getMinutes();
        this.nuovoSecondo=scegliTempo.getSeconds()-1;
        if(nuovoSecondo<0)
            nuovoSecondo=0;
                  LocalTime tempo = LocalTime.of(this.nuovaOra,this.nuovoMinuto,this.nuovoSecondo);
       Date nuovoTempo = java.sql.Time.valueOf(tempo);
       scegliTempo.setTime(nuovoTempo);
    }//GEN-LAST:event_decrementaSecondiBtnActionPerformed

    private void prenotazioneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prenotazioneBtnActionPerformed
        
        String email = (String) this.jComboBox1.getSelectedItem();
       List<RichiestaDto> listaRichiesteUtenti = richiestaService.esisteIndirizzoEmail(email);
       List<OffertaDto> listaOfferteDto = offertaService.esisteIndrizzoEmail(email);
       int saldoOreRichieste = 0;
       int saldoOreOfferte = 0;
       
       for(RichiestaDto richiesta: listaRichiesteUtenti) {
           saldoOreRichieste--;
       }
       for(OffertaDto offerta: listaOfferteDto) {
           saldoOreRichieste++;
       }
       
       if(saldoOreRichieste<-5) {
           JOptionPane.showMessageDialog(getContentPane(),"Errore il saldo ore non può essere inferiore a -5 devi almeno offrire un'attività");
           return;
       }
       
       
       
       int totaleSaldoOre = saldoOreRichieste+saldoOreOfferte;
       
       
       
        Optional<Utente> utenteOpt = utenteService.trovaEmailUtente(email) ;
        if(utenteOpt.isPresent()) {
            
            utenteOpt.get().setSaldoIniziale(totaleSaldoOre);
            utenteService.aggiornaUtente(utenteOpt.get());
        }
        
        
             LocalTime tempo = LocalTime.of(this.nuovaOra,this.nuovoMinuto,this.nuovoSecondo);
       Date tempoIns= java.sql.Time.valueOf(tempo);
       Prenotazione prenotazione = new Prenotazione();
      // prenotazione.setDataPrenotazione(this.scegliData.getDate());
      
       Date dataPrenotazione = scegliData.getDate();
     
       
  //  System.out.println("Data prenotazione " + dataPrenotazione);
     if(dataPrenotazione!=null) {
           prenotazione.setDataPrenotazione(dataPrenotazione);
       prenotazione.setOraPrenotazione(tempoIns);
        if(utenteOpt.isPresent()) {
           prenotazione.setUtente(utenteOpt.get());
       }
       
       
      prenotazioneService.aggiungiPrenotazione(prenotazione);
      JOptionPane.showMessageDialog(null, "Prenotazione inserita correttamente");
    
     }
     
     else {
            JOptionPane.showMessageDialog(null, "Errore la data non deve essere vuota");
            return;
     }
      
   
    }//GEN-LAST:event_prenotazioneBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ModelloPrenotazioneDto modello=new ModelloPrenotazioneDto();
        modello.setLista(prenotazioneService.getPrenotazioni());
        tabella.setModel(modello);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InserisciPrenotazione.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InserisciPrenotazione.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InserisciPrenotazione.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InserisciPrenotazione.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               InserisciPrenotazione ip = new InserisciPrenotazione();
                ip.setVisible(true);
                ip.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton decrementaMinutiBtn;
    private javax.swing.JButton decrementaSecondiBtn;
    private javax.swing.JButton descrementaOreBtn;
    private javax.swing.JLabel etichettaData;
    private javax.swing.JLabel etichettaEmail;
    private javax.swing.JLabel etichettaOra;
    private javax.swing.JButton incrementaBtn;
    private javax.swing.JButton incrementaMinutiBtn;
    private javax.swing.JButton incrementaSecondiBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton prenotazioneBtn;
    private com.toedter.calendar.JDateChooser scegliData;
    private lu.tudor.santec.jtimechooser.JTimeChooser scegliTempo;
    private javax.swing.JTable tabella;
    // End of variables declaration//GEN-END:variables
}
